right now,the thee added items go to the card and shows the total price
but we need to have quatity
so make a table like the one is cdip course
then have a field for input quantity then update button to have the update query

for that the temp transaction table needs a sale quantity field, we need to check if the available qty>0.

okey no, we dont need to check for that, as the quatity is shown in the opening catalog.

XXXXXXXX(we need to have a quantity update in dashboard as well so that the vendor can update the quantity , make it so that the field adds the newly added quantity to the prev one.)

during the first eentry in the temp_transaction table the sale qty is going to be just 1, and there will be a summed price.

that field also needs to be in the temp transaction table. jeta initially unit price e hobe.

and when that happens the total price would be calculated in real time.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------






and then when the vendor confirms the order the total amount would be staged for the tag.

and this point the system will check constantly(spyfall-lobby area) for an entry in a db table.


now how to match that particular entry?
 one way we could handle this is by taking for granted the fact that there will always be JUST ONE entry within a given time.

so in a new waiting_for_payment table we insert the vendor ID, and total price

and wait for the third input, which is the RFID tag number. key[x] > 0 kina check korte thakbe. (eita arduino thheke update query korbe, or perhaps alter)




and then when the waiting process is done, item_list theke qty ekta or je koyta nise(sale_qty) oita minus hobe, and transaction id which is the token, shoho v_id and tag_id ta transaction table a jabe



and then egula transaction table e dekha jabe


system done!!!!



and then oita paile 
